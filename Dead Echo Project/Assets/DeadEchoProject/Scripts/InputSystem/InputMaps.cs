//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/DeadEchoProject/Scripts/InputSystem/InputMaps.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaps: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaps()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaps"",
    ""maps"": [
        {
            ""name"": ""PC_Map"",
            ""id"": ""4b03f44b-7a1f-46c6-b0c7-c4ba244796cc"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""098a3513-4350-4f8b-8630-88edd0cb5a54"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""d2b5adfe-c34e-460c-89d4-3deb83e3787e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightMouse_Action"",
                    ""type"": ""Button"",
                    ""id"": ""74ed7541-5876-4bcc-8bfe-24deadeff1a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftMouse_Action"",
                    ""type"": ""Button"",
                    ""id"": ""0ce985b0-ff59-4651-8348-475c8f227ccb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftShift_Action"",
                    ""type"": ""Button"",
                    ""id"": ""20232a6b-56b0-409b-9325-82cea4458247"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ctrl_Action"",
                    ""type"": ""Button"",
                    ""id"": ""8ba6f3c5-b014-4ec2-a48b-3743121d18eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space_Action"",
                    ""type"": ""Button"",
                    ""id"": ""86b93aa6-8a7c-4c23-aa91-6a96ee6fbff3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab_Action"",
                    ""type"": ""Button"",
                    ""id"": ""02d666b1-a2ab-4739-932b-5e70fe130922"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape_Action"",
                    ""type"": ""Button"",
                    ""id"": ""252d593d-605f-46ce-b5ee-c9e80c81d652"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""1_Action"",
                    ""type"": ""Button"",
                    ""id"": ""bf3ba2e1-5351-421a-8f39-4a7894e0105d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""2_Action"",
                    ""type"": ""Button"",
                    ""id"": ""e2787042-9cf5-4ad1-870d-00826d51bac7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R_Action"",
                    ""type"": ""Button"",
                    ""id"": ""05b057e4-ddbe-4c7e-b513-7afaff3dfac5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B_Action"",
                    ""type"": ""Button"",
                    ""id"": ""62d6a029-ca79-490d-b5a9-9cfaed9680ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""T_Action"",
                    ""type"": ""Button"",
                    ""id"": ""01046a71-1f9d-4bd2-8d5b-be4a618e9520"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F_Action"",
                    ""type"": ""Button"",
                    ""id"": ""98563690-a0f4-47e8-856a-3a81017236b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E_Action"",
                    ""type"": ""Button"",
                    ""id"": ""cfc3fe11-3f3c-4e95-9e92-d9dc102e86d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C_Action"",
                    ""type"": ""Button"",
                    ""id"": ""c6ed3035-5d5b-4bc3-810e-97fc86f35aa1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Z_Action"",
                    ""type"": ""Button"",
                    ""id"": ""323dea5c-4e3c-41a7-ba0b-f84b18def1c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter_Action"",
                    ""type"": ""Button"",
                    ""id"": ""d66961e9-6b23-40b4-9646-795d4d3d4e74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q_Action"",
                    ""type"": ""Button"",
                    ""id"": ""026a1ccc-f6a0-4d03-87e1-2c82390309c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7ecfc215-37ba-4710-b7ec-8040a8f747ae"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""123cc452-67c2-4d4a-901d-8272598d5e49"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5406688a-4511-4fb3-a749-9566977b36c5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2fae29b4-f5b7-43d7-a183-521d8e937978"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""67b95f10-7f03-444e-b322-aa34b10acfae"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5f65f4a1-ca67-4833-b2f9-2d4cb63ffd27"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""915a71ff-630d-4414-b47f-71b45d5ffeae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMouse_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1cc373f-2eb8-4b61-a613-8005ab0c6b94"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b5577c7-2a41-4522-b89e-e8b4853b2882"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""T_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1fe51f1-09d8-4d1b-905e-c837d0d15845"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37f63eb7-a438-4e79-9e68-88feb1db9db3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdbb10cf-e75f-4dae-80fe-b3bf6211cef7"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""C_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38df16c1-ca67-43a1-bd36-e266bb9dc87e"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Z_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0c0bf4d-8c6d-4783-8c12-c288995b740a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fb44032-9168-4008-be58-44dea3ee670f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Space_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c85780d-b02a-4924-b502-7c119b8edac4"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b8e4862-53a9-468b-8f93-b075768971fa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3159b0d3-2639-4326-9bd8-214f682b220e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80bfcb6d-a9a7-44de-afc8-6c678e32c34e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a6ed2fc-749b-4453-b113-72814d065177"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightMouse_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""551dcbf2-16d1-4b6b-a58e-3416bada146a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftShift_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""610f58d6-e4fe-426e-9297-f6dd7311c5fc"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ctrl_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5609a18-334c-484a-9847-a4e16b7e6951"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e9f427d-7e2e-44a8-95fc-5e361e991c57"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Q_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PC_Map
        m_PC_Map = asset.FindActionMap("PC_Map", throwIfNotFound: true);
        m_PC_Map_Look = m_PC_Map.FindAction("Look", throwIfNotFound: true);
        m_PC_Map_Move = m_PC_Map.FindAction("Move", throwIfNotFound: true);
        m_PC_Map_RightMouse_Action = m_PC_Map.FindAction("RightMouse_Action", throwIfNotFound: true);
        m_PC_Map_LeftMouse_Action = m_PC_Map.FindAction("LeftMouse_Action", throwIfNotFound: true);
        m_PC_Map_LeftShift_Action = m_PC_Map.FindAction("LeftShift_Action", throwIfNotFound: true);
        m_PC_Map_Ctrl_Action = m_PC_Map.FindAction("Ctrl_Action", throwIfNotFound: true);
        m_PC_Map_Space_Action = m_PC_Map.FindAction("Space_Action", throwIfNotFound: true);
        m_PC_Map_Tab_Action = m_PC_Map.FindAction("Tab_Action", throwIfNotFound: true);
        m_PC_Map_Escape_Action = m_PC_Map.FindAction("Escape_Action", throwIfNotFound: true);
        m_PC_Map__1_Action = m_PC_Map.FindAction("1_Action", throwIfNotFound: true);
        m_PC_Map__2_Action = m_PC_Map.FindAction("2_Action", throwIfNotFound: true);
        m_PC_Map_R_Action = m_PC_Map.FindAction("R_Action", throwIfNotFound: true);
        m_PC_Map_B_Action = m_PC_Map.FindAction("B_Action", throwIfNotFound: true);
        m_PC_Map_T_Action = m_PC_Map.FindAction("T_Action", throwIfNotFound: true);
        m_PC_Map_F_Action = m_PC_Map.FindAction("F_Action", throwIfNotFound: true);
        m_PC_Map_E_Action = m_PC_Map.FindAction("E_Action", throwIfNotFound: true);
        m_PC_Map_C_Action = m_PC_Map.FindAction("C_Action", throwIfNotFound: true);
        m_PC_Map_Z_Action = m_PC_Map.FindAction("Z_Action", throwIfNotFound: true);
        m_PC_Map_Enter_Action = m_PC_Map.FindAction("Enter_Action", throwIfNotFound: true);
        m_PC_Map_Q_Action = m_PC_Map.FindAction("Q_Action", throwIfNotFound: true);
    }

    ~@InputMaps()
    {
        UnityEngine.Debug.Assert(!m_PC_Map.enabled, "This will cause a leak and performance issues, InputMaps.PC_Map.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PC_Map
    private readonly InputActionMap m_PC_Map;
    private List<IPC_MapActions> m_PC_MapActionsCallbackInterfaces = new List<IPC_MapActions>();
    private readonly InputAction m_PC_Map_Look;
    private readonly InputAction m_PC_Map_Move;
    private readonly InputAction m_PC_Map_RightMouse_Action;
    private readonly InputAction m_PC_Map_LeftMouse_Action;
    private readonly InputAction m_PC_Map_LeftShift_Action;
    private readonly InputAction m_PC_Map_Ctrl_Action;
    private readonly InputAction m_PC_Map_Space_Action;
    private readonly InputAction m_PC_Map_Tab_Action;
    private readonly InputAction m_PC_Map_Escape_Action;
    private readonly InputAction m_PC_Map__1_Action;
    private readonly InputAction m_PC_Map__2_Action;
    private readonly InputAction m_PC_Map_R_Action;
    private readonly InputAction m_PC_Map_B_Action;
    private readonly InputAction m_PC_Map_T_Action;
    private readonly InputAction m_PC_Map_F_Action;
    private readonly InputAction m_PC_Map_E_Action;
    private readonly InputAction m_PC_Map_C_Action;
    private readonly InputAction m_PC_Map_Z_Action;
    private readonly InputAction m_PC_Map_Enter_Action;
    private readonly InputAction m_PC_Map_Q_Action;
    public struct PC_MapActions
    {
        private @InputMaps m_Wrapper;
        public PC_MapActions(@InputMaps wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_PC_Map_Look;
        public InputAction @Move => m_Wrapper.m_PC_Map_Move;
        public InputAction @RightMouse_Action => m_Wrapper.m_PC_Map_RightMouse_Action;
        public InputAction @LeftMouse_Action => m_Wrapper.m_PC_Map_LeftMouse_Action;
        public InputAction @LeftShift_Action => m_Wrapper.m_PC_Map_LeftShift_Action;
        public InputAction @Ctrl_Action => m_Wrapper.m_PC_Map_Ctrl_Action;
        public InputAction @Space_Action => m_Wrapper.m_PC_Map_Space_Action;
        public InputAction @Tab_Action => m_Wrapper.m_PC_Map_Tab_Action;
        public InputAction @Escape_Action => m_Wrapper.m_PC_Map_Escape_Action;
        public InputAction @_1_Action => m_Wrapper.m_PC_Map__1_Action;
        public InputAction @_2_Action => m_Wrapper.m_PC_Map__2_Action;
        public InputAction @R_Action => m_Wrapper.m_PC_Map_R_Action;
        public InputAction @B_Action => m_Wrapper.m_PC_Map_B_Action;
        public InputAction @T_Action => m_Wrapper.m_PC_Map_T_Action;
        public InputAction @F_Action => m_Wrapper.m_PC_Map_F_Action;
        public InputAction @E_Action => m_Wrapper.m_PC_Map_E_Action;
        public InputAction @C_Action => m_Wrapper.m_PC_Map_C_Action;
        public InputAction @Z_Action => m_Wrapper.m_PC_Map_Z_Action;
        public InputAction @Enter_Action => m_Wrapper.m_PC_Map_Enter_Action;
        public InputAction @Q_Action => m_Wrapper.m_PC_Map_Q_Action;
        public InputActionMap Get() { return m_Wrapper.m_PC_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PC_MapActions set) { return set.Get(); }
        public void AddCallbacks(IPC_MapActions instance)
        {
            if (instance == null || m_Wrapper.m_PC_MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PC_MapActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @RightMouse_Action.started += instance.OnRightMouse_Action;
            @RightMouse_Action.performed += instance.OnRightMouse_Action;
            @RightMouse_Action.canceled += instance.OnRightMouse_Action;
            @LeftMouse_Action.started += instance.OnLeftMouse_Action;
            @LeftMouse_Action.performed += instance.OnLeftMouse_Action;
            @LeftMouse_Action.canceled += instance.OnLeftMouse_Action;
            @LeftShift_Action.started += instance.OnLeftShift_Action;
            @LeftShift_Action.performed += instance.OnLeftShift_Action;
            @LeftShift_Action.canceled += instance.OnLeftShift_Action;
            @Ctrl_Action.started += instance.OnCtrl_Action;
            @Ctrl_Action.performed += instance.OnCtrl_Action;
            @Ctrl_Action.canceled += instance.OnCtrl_Action;
            @Space_Action.started += instance.OnSpace_Action;
            @Space_Action.performed += instance.OnSpace_Action;
            @Space_Action.canceled += instance.OnSpace_Action;
            @Tab_Action.started += instance.OnTab_Action;
            @Tab_Action.performed += instance.OnTab_Action;
            @Tab_Action.canceled += instance.OnTab_Action;
            @Escape_Action.started += instance.OnEscape_Action;
            @Escape_Action.performed += instance.OnEscape_Action;
            @Escape_Action.canceled += instance.OnEscape_Action;
            @_1_Action.started += instance.On_1_Action;
            @_1_Action.performed += instance.On_1_Action;
            @_1_Action.canceled += instance.On_1_Action;
            @_2_Action.started += instance.On_2_Action;
            @_2_Action.performed += instance.On_2_Action;
            @_2_Action.canceled += instance.On_2_Action;
            @R_Action.started += instance.OnR_Action;
            @R_Action.performed += instance.OnR_Action;
            @R_Action.canceled += instance.OnR_Action;
            @B_Action.started += instance.OnB_Action;
            @B_Action.performed += instance.OnB_Action;
            @B_Action.canceled += instance.OnB_Action;
            @T_Action.started += instance.OnT_Action;
            @T_Action.performed += instance.OnT_Action;
            @T_Action.canceled += instance.OnT_Action;
            @F_Action.started += instance.OnF_Action;
            @F_Action.performed += instance.OnF_Action;
            @F_Action.canceled += instance.OnF_Action;
            @E_Action.started += instance.OnE_Action;
            @E_Action.performed += instance.OnE_Action;
            @E_Action.canceled += instance.OnE_Action;
            @C_Action.started += instance.OnC_Action;
            @C_Action.performed += instance.OnC_Action;
            @C_Action.canceled += instance.OnC_Action;
            @Z_Action.started += instance.OnZ_Action;
            @Z_Action.performed += instance.OnZ_Action;
            @Z_Action.canceled += instance.OnZ_Action;
            @Enter_Action.started += instance.OnEnter_Action;
            @Enter_Action.performed += instance.OnEnter_Action;
            @Enter_Action.canceled += instance.OnEnter_Action;
            @Q_Action.started += instance.OnQ_Action;
            @Q_Action.performed += instance.OnQ_Action;
            @Q_Action.canceled += instance.OnQ_Action;
        }

        private void UnregisterCallbacks(IPC_MapActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @RightMouse_Action.started -= instance.OnRightMouse_Action;
            @RightMouse_Action.performed -= instance.OnRightMouse_Action;
            @RightMouse_Action.canceled -= instance.OnRightMouse_Action;
            @LeftMouse_Action.started -= instance.OnLeftMouse_Action;
            @LeftMouse_Action.performed -= instance.OnLeftMouse_Action;
            @LeftMouse_Action.canceled -= instance.OnLeftMouse_Action;
            @LeftShift_Action.started -= instance.OnLeftShift_Action;
            @LeftShift_Action.performed -= instance.OnLeftShift_Action;
            @LeftShift_Action.canceled -= instance.OnLeftShift_Action;
            @Ctrl_Action.started -= instance.OnCtrl_Action;
            @Ctrl_Action.performed -= instance.OnCtrl_Action;
            @Ctrl_Action.canceled -= instance.OnCtrl_Action;
            @Space_Action.started -= instance.OnSpace_Action;
            @Space_Action.performed -= instance.OnSpace_Action;
            @Space_Action.canceled -= instance.OnSpace_Action;
            @Tab_Action.started -= instance.OnTab_Action;
            @Tab_Action.performed -= instance.OnTab_Action;
            @Tab_Action.canceled -= instance.OnTab_Action;
            @Escape_Action.started -= instance.OnEscape_Action;
            @Escape_Action.performed -= instance.OnEscape_Action;
            @Escape_Action.canceled -= instance.OnEscape_Action;
            @_1_Action.started -= instance.On_1_Action;
            @_1_Action.performed -= instance.On_1_Action;
            @_1_Action.canceled -= instance.On_1_Action;
            @_2_Action.started -= instance.On_2_Action;
            @_2_Action.performed -= instance.On_2_Action;
            @_2_Action.canceled -= instance.On_2_Action;
            @R_Action.started -= instance.OnR_Action;
            @R_Action.performed -= instance.OnR_Action;
            @R_Action.canceled -= instance.OnR_Action;
            @B_Action.started -= instance.OnB_Action;
            @B_Action.performed -= instance.OnB_Action;
            @B_Action.canceled -= instance.OnB_Action;
            @T_Action.started -= instance.OnT_Action;
            @T_Action.performed -= instance.OnT_Action;
            @T_Action.canceled -= instance.OnT_Action;
            @F_Action.started -= instance.OnF_Action;
            @F_Action.performed -= instance.OnF_Action;
            @F_Action.canceled -= instance.OnF_Action;
            @E_Action.started -= instance.OnE_Action;
            @E_Action.performed -= instance.OnE_Action;
            @E_Action.canceled -= instance.OnE_Action;
            @C_Action.started -= instance.OnC_Action;
            @C_Action.performed -= instance.OnC_Action;
            @C_Action.canceled -= instance.OnC_Action;
            @Z_Action.started -= instance.OnZ_Action;
            @Z_Action.performed -= instance.OnZ_Action;
            @Z_Action.canceled -= instance.OnZ_Action;
            @Enter_Action.started -= instance.OnEnter_Action;
            @Enter_Action.performed -= instance.OnEnter_Action;
            @Enter_Action.canceled -= instance.OnEnter_Action;
            @Q_Action.started -= instance.OnQ_Action;
            @Q_Action.performed -= instance.OnQ_Action;
            @Q_Action.canceled -= instance.OnQ_Action;
        }

        public void RemoveCallbacks(IPC_MapActions instance)
        {
            if (m_Wrapper.m_PC_MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPC_MapActions instance)
        {
            foreach (var item in m_Wrapper.m_PC_MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PC_MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PC_MapActions @PC_Map => new PC_MapActions(this);
    public interface IPC_MapActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnRightMouse_Action(InputAction.CallbackContext context);
        void OnLeftMouse_Action(InputAction.CallbackContext context);
        void OnLeftShift_Action(InputAction.CallbackContext context);
        void OnCtrl_Action(InputAction.CallbackContext context);
        void OnSpace_Action(InputAction.CallbackContext context);
        void OnTab_Action(InputAction.CallbackContext context);
        void OnEscape_Action(InputAction.CallbackContext context);
        void On_1_Action(InputAction.CallbackContext context);
        void On_2_Action(InputAction.CallbackContext context);
        void OnR_Action(InputAction.CallbackContext context);
        void OnB_Action(InputAction.CallbackContext context);
        void OnT_Action(InputAction.CallbackContext context);
        void OnF_Action(InputAction.CallbackContext context);
        void OnE_Action(InputAction.CallbackContext context);
        void OnC_Action(InputAction.CallbackContext context);
        void OnZ_Action(InputAction.CallbackContext context);
        void OnEnter_Action(InputAction.CallbackContext context);
        void OnQ_Action(InputAction.CallbackContext context);
    }
}
